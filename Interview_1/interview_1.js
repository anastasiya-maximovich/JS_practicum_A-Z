/* Возможные вопросы на собеседовании на знание основ:

1. Какое будет выведено значение: let x = 5; alert( x++ ); ?
2. Чему равно такое выражение: [ ] + false - null + true ?
3. Что выведет этот код: let y = 1; let x = y = 2; alert(x); ?
4. Чему равна сумма [ ] + 1 + 2?
5. Что выведет этот код: alert( "1"[0] )?
6. Чему равно 2 && 1 && null && 0 && undefined ?
7. Есть ли разница между выражениями? !!(a && b) (a&&b))?
8. Что выведет этот код: alert(null || 2 && 3 || 4 ); ?
9. a = [1, 2, 3]; b = [1, 2, 3]; Правда ли что a == b ?
10. Что выведет этот код: alert( +"Infinity"); ?
11. Верно ли сравнение: "Ёжик" > "Яблоко"?
12. Чему равно 0 || "" || 2 || undefined || false?

*/
#1. 
let x = 5; alert( x++ ); 
В ответе будет "5", т.к. сначала выведется значение х, и лишь потом оно увеличится.

#2.
Чему равно такое выражение: [ ] + false - null + true ?
NaN , т.к. пытаемся отнять Не цифры/ при этом если бы в данном выражении не было null, то мы получили бы просто сконкотин. строку 'falsetrue'
       [] - пустой массив принимает вид пустой строки.

#3.
let y = 1; let x = y = 2; alert(x); // 2

#4.
[ ] + 1 + 2 // 12 произошла конкотинация, [] - пустая строка

#5.
alert("1"[0]);// 1 

#6.
2 && 1 && null && 0 && undefined // && всегда запинается на лжи! т.е. null и undefande -это ложь
                                //но null был обнаружен раньше, и код дальше не пойдет 
                                // ответ  null


#7.
!!(a && b) (a && b) // тут НЕравны , т.к. !!превращает следующее за ним выражение в boolean,a boolean
                    // НЕравно числам

#8.
(null || 2 && 3 || 4 ) // па таблице приоритетов && выше ||, т.е. выполняется раньше.
                    //когда в && оба правдивы, возвращается ПОСЛЕДНЕЕ - 3.
                    //дальше идётут проверки оператора ИЛИ(||).ИЛИ всегда запинается на правде, и дальше не идет

#9.
a = [1, 2, 3]; b = [1, 2, 3]; // а НЕ равно б, т.к. это две разные переменные , и два разных массива
                //если бы мы  сравнивали переменные внутри массивов, тогда...

#10.
alert(+"Infinity") // тут будет Infinity  как число

#11.
"Ёжик" > "яблоко" //false В строках идет посимвольное сравнение. Сравнивают по таблице кодировки
                    //Мы можем сравнивать ,н.п., длинну стоки данных слов. Тогда будет выражение Не верно, яблоко больше

#12.
(0 || "" || 2 || undefined || false); //2 , т.к. ИЛИ запитается на правде.
             // 0 - ложь, "" - ложь, 2 -правда.. и дльше не пойдет.



1. Если не знаешь, в каком порядке работать с операторами, постотри в таблице приорететов.
2. Оператор И всегда запинается на лжи.
3. Оператор ИЛИ всегда запинается на правде. 
4. Пустой массив превращает выражение в строку. 
5. строки сравниваются посимвольно по таблице кодировки
